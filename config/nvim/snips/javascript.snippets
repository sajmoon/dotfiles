global !p
from javascript_snippets import (
	semi, space_before_function_paren, keyword_spacing
)
endglobal

snippet cl "console.log(...)"
console.log('$1')
endsnippet

snippet cld "console.log('object', object)"
console.log('${1:object}', $1)
endsnippet

snippet r "return"
return ${0:result}
endsnippet

snippet c=> "Const Function" bA
const ${1:name} = (${2:args}) => {
	return $3
}
endsnippet

snippet class "Class"
class ${1:Name} {
	constructor(${2:arg}) {
		$3
	}
	$4
}
endsnippet

snippet rrcc "React Redux Class Component" b
import React, { PropTypes } from 'react'
import { connect } from 'react-redux'

class ${1:ComponentName} extends React.Component {
	render() {
		return (${2:null})
	}
}

const mapStateToProps = {}

export default connect(mapStateToProps)($1)
endsnippet

snippet iife "Immediately-Invoked Function Expression (iife)"
(function`!p snip.rv = space_before_function_paren(snip)`(${1:window}) {
	${VISUAL}$0
}(${2:$1}))`!p snip.rv = semi(snip)`
endsnippet

snippet rfc "React Stateless functional component"
import React from 'react'
import PropTypes from 'prop-types'

const propTypes = {}

function ${1:funName}(${2:props}) {
	return ${0:null}
}

$1.propTypes = propTypes

export default $1
endsnippet

snippet fun "A function" b
function ${1:Name}($2) {
	$0
}
endsnippet

snippet desc "Mocha describe" b
describe('${1:Description}', () => {
	$0
})
endsnippet

snippet it "Mocha it block" b
it('${1:What}', () => {
	$0
})
endsnippet

snippet expect "chai expect" b
expect(${1:object}).to.$2
endsnippet

snippet spec "imports for a javascript component spec" b
import React from 'react'
import { expect } from 'chai'
import { shallow } from 'enzyme'

import $1 from './$1'

describe('<${1:ComponentName} />', () => {
	$0
})
endsnippet

snippet shallow "shallow render a component" b
const wrapper = shallow(<${1:Component} />)
expect(wrapper.$2).to.$3
endsnippet
